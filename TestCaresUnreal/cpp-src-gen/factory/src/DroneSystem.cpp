/* 
 * DroneSystem.cpp
 * Root Component
 *
 * Generated by Cares generator, written with Acceleo
 * Author: pyp
 */
#include "DroneSystem.h"
#include "Drone.h"
#include "Manager.h"
InstDrone *DroneSystem::get_InstDrone() {
		return instInstDrone;
	}
MainManager *DroneSystem::get_MainManager() {
		return instMainManager;
	}

DroneSystem::DroneSystem() {
	//leafComponents = new std::vector<LeafComponent*>();
	instInstDrone = new InstDrone(0.0);
	leafComponents.push_back(instInstDrone);
	instMainManager = new MainManager(0.0);
	leafComponents.push_back(instMainManager);
	instInstDrone->setMainManager(instMainManager);
	instMainManager->setInstDrone(instInstDrone);
	}
DroneSystem::~DroneSystem() {}
void DroneSystem::initialize() {
	instInstDrone->setSpeed(1.);
	instInstDrone->setCurrentLocation(Vector3.Zero);
	//instInstDrone->setFrequency(0.0);
	instMainManager->setDirection(Vector3.Forwards);
	//instMainManager->setFrequency(0.0);
	if(instInstDrone->getIsActive()) instInstDrone->initialize();
	if(instMainManager->getIsActive()) instMainManager->initialize();
// Start of user code  : Implementation of initialize method DroneSystem
// End of user code
	}

void DroneSystem::end() {
	instInstDrone->end();
	instMainManager->end();
// Start of user code  : Implementation of initialize method DroneSystem
// End of user code
	}

