/*
 * Drone.cpp
 *
 * Generated by Cares generator, written with Acceleo
 * Author: pyp
 */

#include "Drone.h"
#include "compDrone.h"
// Start of user code  : Additional imports for Drone
// End of user code


Drone::Drone(compDrone *container)	{
		myContainer = container;
// Start of user code  : Implementation of constructor method

// End of user code
	}
Drone::~Drone(){
// Start of user code  : Implementation of destructor method

// End of user code
	}
void Drone::initialize() {
// Start of user code  : Implementation of initialize method

// End of user code
	}

void Drone::end() {
// Start of user code  : Implementation of end method

// End of user code
	}

void Drone::doStep(int nStep) {
// Start of user code  : Implementation of doStep method
		// to implement
// End of user code
	}
	
	
// Start of user code  : Additional methods

// End of user code
	

void Drone::setForce(Vector3 arg) {
		force = arg;
	}

Vector3 Drone::getPosition() {
		return position;
	}
	// +++++++++++++ Access for speed parameter +++++++++++++
double Drone::getSpeed() {
		return speed;
	}
	
void Drone::setSpeed(double arg) {
		speed = arg;
	}
	// +++++++++++++ Access for direction parameter +++++++++++++
Vector3 Drone::getDirection() {
		return direction;
	}
	
void Drone::setDirection(Vector3 arg) {
		direction = arg;
	}
	// +++++++++++++ Access for drPosition parameter +++++++++++++
Vector3 Drone::getDrPosition() {
		return drPosition;
	}
	
void Drone::setDrPosition(Vector3 arg) {
		drPosition = arg;
	}

