/*
 * Wind.cpp
 *
 * Generated by Cares generator, written with Acceleo
 * Author: pyp
 */

#include "compWind.h"
#include "Wind.h"
compWind::compWind(double aFrequency) : LeafComponent( aFrequency) {
		appli = new Wind( this);
		delay = 0;
		delayMax = 0;
		newValue = false;
		isActive = true;
		oldForce = appli->getForce();
		newForce = appli->getForce();
	}
compWind::~compWind()	{}

void compWind::doOneStep() {
		if (newValue) {
			delay++;
			if (delay == delayMax) {
					oldForce = newForce;
					newValue = false;
			}
		}
	}

void compWind::doStep(int nStep) {	
		if (newValue) {
			oldForce = newForce;
			newValue = false;
		}
		readInputs();
		appli->doStep(nStep);
		newForce = appli->getForce();
		if (delayMax == 0) {
			oldForce = newForce;
			newValue = false;
		} else {
			newValue = true;
			delay = 0;
		}
	}

void compWind::readInputs() {
	}
void compWind::initialize() {
		appli->initialize();
	}

void compWind::end() {
		appli->end();
	}
	
Vector3 compWind::getForce() {
		return oldForce;
	}
Wind *compWind::getAppli() {
		return appli;
	}
	// +++++++++++++ Access for windData parameter +++++++++++++
WindData compWind::getWindData() {
		return appli->getWindData();
	}
	
void compWind::setWindData(WindData arg) {
		appli->setWindData(arg);
	}

